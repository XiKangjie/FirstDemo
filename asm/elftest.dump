
elftest:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400270 <.interp>:
  400270:	2f                   	(bad)  
  400271:	6c                   	insb   (%dx),%es:(%rdi)
  400272:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400279:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40027e:	78 2d                	js     4002ad <_init-0x15b>
  400280:	78 38                	js     4002ba <_init-0x14e>
  400282:	36                   	ss
  400283:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400288:	6f                   	outsl  %ds:(%rsi),(%dx)
  400289:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040028c <.note.ABI-tag>:
  40028c:	04 00                	add    $0x0,%al
  40028e:	00 00                	add    %al,(%rax)
  400290:	10 00                	adc    %al,(%rax)
  400292:	00 00                	add    %al,(%rax)
  400294:	01 00                	add    %eax,(%rax)
  400296:	00 00                	add    %al,(%rax)
  400298:	47                   	rex.RXB
  400299:	4e 55                	rex.WRX push %rbp
  40029b:	00 00                	add    %al,(%rax)
  40029d:	00 00                	add    %al,(%rax)
  40029f:	00 02                	add    %al,(%rdx)
  4002a1:	00 00                	add    %al,(%rax)
  4002a3:	00 06                	add    %al,(%rsi)
  4002a5:	00 00                	add    %al,(%rax)
  4002a7:	00 09                	add    %cl,(%rcx)
  4002a9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .hash:

00000000004002b0 <.hash>:
  4002b0:	03 00                	add    (%rax),%eax
  4002b2:	00 00                	add    %al,(%rax)
  4002b4:	04 00                	add    $0x0,%al
  4002b6:	00 00                	add    %al,(%rax)
  4002b8:	02 00                	add    (%rax),%al
  4002ba:	00 00                	add    %al,(%rax)
  4002bc:	03 00                	add    (%rax),%eax
  4002be:	00 00                	add    %al,(%rax)
  4002c0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .gnu.hash:

00000000004002d8 <.gnu.hash>:
  4002d8:	01 00                	add    %eax,(%rax)
  4002da:	00 00                	add    %al,(%rax)
  4002dc:	01 00                	add    %eax,(%rax)
  4002de:	00 00                	add    %al,(%rax)
  4002e0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002f8 <.dynsym>:
	...
  400310:	1a 00                	sbb    (%rax),%al
  400312:	00 00                	add    %al,(%rax)
  400314:	12 00                	adc    (%rax),%al
	...
  400326:	00 00                	add    %al,(%rax)
  400328:	01 00                	add    %eax,(%rax)
  40032a:	00 00                	add    %al,(%rax)
  40032c:	20 00                	and    %al,(%rax)
	...
  40033e:	00 00                	add    %al,(%rax)
  400340:	21 00                	and    %eax,(%rax)
  400342:	00 00                	add    %al,(%rax)
  400344:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000400358 <.dynstr>:
  400358:	00 5f 5f             	add    %bl,0x5f(%rdi)
  40035b:	67 6d                	insl   (%dx),%es:(%edi)
  40035d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40035e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40035f:	5f                   	pop    %rdi
  400360:	73 74                	jae    4003d6 <_init-0x32>
  400362:	61                   	(bad)  
  400363:	72 74                	jb     4003d9 <_init-0x2f>
  400365:	5f                   	pop    %rdi
  400366:	5f                   	pop    %rdi
  400367:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40036b:	63 2e                	movslq (%rsi),%ebp
  40036d:	73 6f                	jae    4003de <_init-0x2a>
  40036f:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  400374:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40037b:	6c                   	insb   (%dx),%es:(%rdi)
  40037c:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400383:	72 74                	jb     4003f9 <_init-0xf>
  400385:	5f                   	pop    %rdi
  400386:	6d                   	insl   (%dx),%es:(%rdi)
  400387:	61                   	(bad)  
  400388:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  40038f:	43 5f                	rex.XB pop %r15
  400391:	32 2e                	xor    (%rsi),%ch
  400393:	32 2e                	xor    (%rsi),%ch
  400395:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400398 <.gnu.version>:
  400398:	00 00                	add    %al,(%rax)
  40039a:	02 00                	add    (%rax),%al
  40039c:	00 00                	add    %al,(%rax)
  40039e:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

00000000004003a0 <.gnu.version_r>:
  4003a0:	01 00                	add    %eax,(%rax)
  4003a2:	01 00                	add    %eax,(%rax)
  4003a4:	10 00                	adc    %al,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	10 00                	adc    %al,(%rax)
  4003aa:	00 00                	add    %al,(%rax)
  4003ac:	00 00                	add    %al,(%rax)
  4003ae:	00 00                	add    %al,(%rax)
  4003b0:	75 1a                	jne    4003cc <_init-0x3c>
  4003b2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  4003b8:	33 00                	xor    (%rax),%eax
  4003ba:	00 00                	add    %al,(%rax)
  4003bc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003c0 <.rela.dyn>:
  4003c0:	e0 0f                	loopne 4003d1 <_init-0x37>
  4003c2:	60                   	(bad)  
  4003c3:	00 00                	add    %al,(%rax)
  4003c5:	00 00                	add    %al,(%rax)
  4003c7:	00 06                	add    %al,(%rsi)
  4003c9:	00 00                	add    %al,(%rax)
  4003cb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .rela.plt:

00000000004003d8 <.rela.plt>:
  4003d8:	00 10                	add    %dl,(%rax)
  4003da:	60                   	(bad)  
  4003db:	00 00                	add    %al,(%rax)
  4003dd:	00 00                	add    %al,(%rax)
  4003df:	00 07                	add    %al,(%rdi)
  4003e1:	00 00                	add    %al,(%rax)
  4003e3:	00 01                	add    %al,(%rcx)
	...
  4003ed:	00 00                	add    %al,(%rax)
  4003ef:	00 08                	add    %cl,(%rax)
  4003f1:	10 60 00             	adc    %ah,0x0(%rax)
  4003f4:	00 00                	add    %al,(%rax)
  4003f6:	00 00                	add    %al,(%rax)
  4003f8:	07                   	(bad)  
  4003f9:	00 00                	add    %al,(%rax)
  4003fb:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000400408 <_init>:
_init():
  400408:	48 83 ec 08          	sub    $0x8,%rsp
  40040c:	e8 6b 00 00 00       	callq  40047c <_start+0x2c>
  400411:	e8 dc 00 00 00       	callq  4004f2 <_start+0xa2>
  400416:	e8 91 01 00 00       	callq  4005ac <__libc_csu_fini+0x2>
  40041b:	48 83 c4 08          	add    $0x8,%rsp
  40041f:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <printf@plt-0x10>:
  400420:	ff 35 ca 0b 20 00    	pushq  0x200bca(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 cc 0b 20 00    	jmpq   *0x200bcc(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <printf@plt>:
  400430:	ff 25 ca 0b 20 00    	jmpq   *0x200bca(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <_init+0x18>

0000000000400440 <__libc_start_main@plt>:
  400440:	ff 25 c2 0b 20 00    	jmpq   *0x200bc2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <_init+0x18>

Disassembly of section .text:

0000000000400450 <_start>:
_start():
  400450:	31 ed                	xor    %ebp,%ebp
  400452:	49 89 d1             	mov    %rdx,%r9
  400455:	5e                   	pop    %rsi
  400456:	48 89 e2             	mov    %rsp,%rdx
  400459:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40045d:	50                   	push   %rax
  40045e:	54                   	push   %rsp
  40045f:	49 c7 c0 aa 05 40 00 	mov    $0x4005aa,%r8
  400466:	48 c7 c1 50 05 40 00 	mov    $0x400550,%rcx
  40046d:	48 c7 c7 14 05 40 00 	mov    $0x400514,%rdi
  400474:	e8 c7 ff ff ff       	callq  400440 <__libc_start_main@plt>
  400479:	f4                   	hlt    
  40047a:	90                   	nop
  40047b:	90                   	nop
  40047c:	48 83 ec 08          	sub    $0x8,%rsp
  400480:	48 8b 05 59 0b 20 00 	mov    0x200b59(%rip),%rax        # 600fe0 <_DYNAMIC+0x1a0>
  400487:	48 85 c0             	test   %rax,%rax
  40048a:	74 02                	je     40048e <_start+0x3e>
  40048c:	ff d0                	callq  *%rax
  40048e:	48 83 c4 08          	add    $0x8,%rsp
  400492:	c3                   	retq   
  400493:	90                   	nop
  400494:	55                   	push   %rbp
  400495:	48 89 e5             	mov    %rsp,%rbp
  400498:	53                   	push   %rbx
  400499:	48 83 ec 08          	sub    $0x8,%rsp
  40049d:	80 3d 84 0b 20 00 00 	cmpb   $0x0,0x200b84(%rip)        # 601028 <__bss_start+0x4>
  4004a4:	75 45                	jne    4004eb <_start+0x9b>
  4004a6:	48 8b 05 83 0b 20 00 	mov    0x200b83(%rip),%rax        # 601030 <__bss_start+0xc>
  4004ad:	bb 30 0e 60 00       	mov    $0x600e30,%ebx
  4004b2:	48 81 eb 28 0e 60 00 	sub    $0x600e28,%rbx
  4004b9:	48 c1 fb 03          	sar    $0x3,%rbx
  4004bd:	48 83 eb 01          	sub    $0x1,%rbx
  4004c1:	48 39 d8             	cmp    %rbx,%rax
  4004c4:	73 1e                	jae    4004e4 <_start+0x94>
  4004c6:	48 83 c0 01          	add    $0x1,%rax
  4004ca:	48 89 05 5f 0b 20 00 	mov    %rax,0x200b5f(%rip)        # 601030 <__bss_start+0xc>
  4004d1:	ff 14 c5 28 0e 60 00 	callq  *0x600e28(,%rax,8)
  4004d8:	48 8b 05 51 0b 20 00 	mov    0x200b51(%rip),%rax        # 601030 <__bss_start+0xc>
  4004df:	48 39 d8             	cmp    %rbx,%rax
  4004e2:	72 e2                	jb     4004c6 <_start+0x76>
  4004e4:	c6 05 3d 0b 20 00 01 	movb   $0x1,0x200b3d(%rip)        # 601028 <__bss_start+0x4>
  4004eb:	48 83 c4 08          	add    $0x8,%rsp
  4004ef:	5b                   	pop    %rbx
  4004f0:	5d                   	pop    %rbp
  4004f1:	c3                   	retq   
  4004f2:	55                   	push   %rbp
  4004f3:	48 89 e5             	mov    %rsp,%rbp
  4004f6:	48 83 3d 3a 09 20 00 	cmpq   $0x0,0x20093a(%rip)        # 600e38 <__DTOR_END__+0x8>
  4004fd:	00 
  4004fe:	74 12                	je     400512 <_start+0xc2>
  400500:	b8 00 00 00 00       	mov    $0x0,%eax
  400505:	48 85 c0             	test   %rax,%rax
  400508:	74 08                	je     400512 <_start+0xc2>
  40050a:	bf 38 0e 60 00       	mov    $0x600e38,%edi
  40050f:	5d                   	pop    %rbp
  400510:	ff e0                	jmpq   *%rax
  400512:	5d                   	pop    %rbp
  400513:	c3                   	retq   

0000000000400514 <main>:
main():
  400514:	55                   	push   %rbp
  400515:	48 89 e5             	mov    %rsp,%rbp
  400518:	48 83 ec 10          	sub    $0x10,%rsp
  40051c:	8b 05 fe 0a 20 00    	mov    0x200afe(%rip),%eax        # 601020 <d>
  400522:	89 c2                	mov    %eax,%edx
  400524:	8b 05 ca 00 00 00    	mov    0xca(%rip),%eax        # 4005f4 <N>
  40052a:	8d 04 02             	lea    (%rdx,%rax,1),%eax
  40052d:	88 45 ff             	mov    %al,-0x1(%rbp)
  400530:	0f be 55 ff          	movsbl -0x1(%rbp),%edx
  400534:	b8 f8 05 40 00       	mov    $0x4005f8,%eax
  400539:	89 d6                	mov    %edx,%esi
  40053b:	48 89 c7             	mov    %rax,%rdi
  40053e:	b8 00 00 00 00       	mov    $0x0,%eax
  400543:	e8 e8 fe ff ff       	callq  400430 <printf@plt>
  400548:	b8 00 00 00 00       	mov    $0x0,%eax
  40054d:	c9                   	leaveq 
  40054e:	c3                   	retq   
  40054f:	90                   	nop

0000000000400550 <__libc_csu_init>:
__libc_csu_init():
  400550:	41 57                	push   %r15
  400552:	41 56                	push   %r14
  400554:	41 55                	push   %r13
  400556:	41 54                	push   %r12
  400558:	55                   	push   %rbp
  400559:	53                   	push   %rbx
  40055a:	48 83 ec 08          	sub    $0x8,%rsp
  40055e:	41 89 fc             	mov    %edi,%r12d
  400561:	49 89 f5             	mov    %rsi,%r13
  400564:	49 89 d6             	mov    %rdx,%r14
  400567:	e8 9c fe ff ff       	callq  400408 <_init>
  40056c:	4c 8d 3d a1 08 20 00 	lea    0x2008a1(%rip),%r15        # 600e14 <__init_array_end>
  400573:	48 8d 2d 9a 08 20 00 	lea    0x20089a(%rip),%rbp        # 600e14 <__init_array_end>
  40057a:	49 29 ef             	sub    %rbp,%r15
  40057d:	49 c1 ff 03          	sar    $0x3,%r15
  400581:	74 18                	je     40059b <__libc_csu_init+0x4b>
  400583:	31 db                	xor    %ebx,%ebx
  400585:	4c 89 f2             	mov    %r14,%rdx
  400588:	4c 89 ee             	mov    %r13,%rsi
  40058b:	44 89 e7             	mov    %r12d,%edi
  40058e:	ff 54 dd 00          	callq  *0x0(%rbp,%rbx,8)
  400592:	48 83 c3 01          	add    $0x1,%rbx
  400596:	4c 39 fb             	cmp    %r15,%rbx
  400599:	72 ea                	jb     400585 <__libc_csu_init+0x35>
  40059b:	48 83 c4 08          	add    $0x8,%rsp
  40059f:	5b                   	pop    %rbx
  4005a0:	5d                   	pop    %rbp
  4005a1:	41 5c                	pop    %r12
  4005a3:	41 5d                	pop    %r13
  4005a5:	41 5e                	pop    %r14
  4005a7:	41 5f                	pop    %r15
  4005a9:	c3                   	retq   

00000000004005aa <__libc_csu_fini>:
__libc_csu_fini():
  4005aa:	c3                   	retq   
  4005ab:	90                   	nop
  4005ac:	55                   	push   %rbp
  4005ad:	48 89 e5             	mov    %rsp,%rbp
  4005b0:	53                   	push   %rbx
  4005b1:	48 83 ec 08          	sub    $0x8,%rsp
  4005b5:	48 8b 05 5c 08 20 00 	mov    0x20085c(%rip),%rax        # 600e18 <__init_array_end+0x4>
  4005bc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4005c0:	74 14                	je     4005d6 <__libc_csu_fini+0x2c>
  4005c2:	bb 18 0e 60 00       	mov    $0x600e18,%ebx
  4005c7:	ff d0                	callq  *%rax
  4005c9:	48 83 eb 08          	sub    $0x8,%rbx
  4005cd:	48 8b 03             	mov    (%rbx),%rax
  4005d0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4005d4:	75 f1                	jne    4005c7 <__libc_csu_fini+0x1d>
  4005d6:	48 83 c4 08          	add    $0x8,%rsp
  4005da:	5b                   	pop    %rbx
  4005db:	5d                   	pop    %rbp
  4005dc:	c3                   	retq   
  4005dd:	90                   	nop
  4005de:	90                   	nop
  4005df:	90                   	nop

Disassembly of section .fini:

00000000004005e0 <_fini>:
_fini():
  4005e0:	48 83 ec 08          	sub    $0x8,%rsp
  4005e4:	e8 ab fe ff ff       	callq  400494 <_start+0x44>
  4005e9:	48 83 c4 08          	add    $0x8,%rsp
  4005ed:	c3                   	retq   

Disassembly of section .rodata:

00000000004005f0 <_IO_stdin_used>:
  4005f0:	01 00                	add    %eax,(%rax)
  4005f2:	02 00                	add    (%rax),%al

00000000004005f4 <N>:
  4005f4:	30 00                	xor    %al,(%rax)
  4005f6:	00 00                	add    %al,(%rax)
  4005f8:	43 68 61 72 20 69    	rex.XB pushq $0x69207261
  4005fe:	73 20                	jae    400620 <N+0x2c>
  400600:	25                   	.byte 0x25
  400601:	63 0a                	movslq (%rdx),%ecx
	...

Disassembly of section .eh_frame_hdr:

0000000000400604 <.eh_frame_hdr>:
  400604:	01 1b                	add    %ebx,(%rbx)
  400606:	03 3b                	add    (%rbx),%edi
  400608:	20 00                	and    %al,(%rax)
  40060a:	00 00                	add    %al,(%rax)
  40060c:	03 00                	add    (%rax),%eax
  40060e:	00 00                	add    %al,(%rax)
  400610:	10 ff                	adc    %bh,%bh
  400612:	ff                   	(bad)  
  400613:	ff                   	(bad)  
  400614:	3c 00                	cmp    $0x0,%al
  400616:	00 00                	add    %al,(%rax)
  400618:	4c ff                	rex.WR (bad) 
  40061a:	ff                   	(bad)  
  40061b:	ff 5c 00 00          	lcallq *0x0(%rax,%rax,1)
  40061f:	00 a6 ff ff ff a4    	add    %ah,-0x5b000001(%rsi)
  400625:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000400628 <.eh_frame>:
  400628:	14 00                	adc    $0x0,%al
  40062a:	00 00                	add    %al,(%rax)
  40062c:	00 00                	add    %al,(%rax)
  40062e:	00 00                	add    %al,(%rax)
  400630:	01 7a 52             	add    %edi,0x52(%rdx)
  400633:	00 01                	add    %al,(%rcx)
  400635:	78 10                	js     400647 <N+0x53>
  400637:	01 1b                	add    %ebx,(%rbx)
  400639:	0c 07                	or     $0x7,%al
  40063b:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  400641:	00 00                	add    %al,(%rax)
  400643:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400646:	00 00                	add    %al,(%rax)
  400648:	cc                   	int3   
  400649:	fe                   	(bad)  
  40064a:	ff                   	(bad)  
  40064b:	ff                   	(bad)  
  40064c:	3b 00                	cmp    (%rax),%eax
  40064e:	00 00                	add    %al,(%rax)
  400650:	00 41 0e             	add    %al,0xe(%rcx)
  400653:	10 43 86             	adc    %al,-0x7a(%rbx)
  400656:	02 0d 06 76 0c 07    	add    0x70c7606(%rip),%cl        # 74c7c62 <_end+0x6ec6c2a>
  40065c:	08 00                	or     %al,(%rax)
  40065e:	00 00                	add    %al,(%rax)
  400660:	44 00 00             	add    %r8b,(%rax)
  400663:	00 3c 00             	add    %bh,(%rax,%rax,1)
  400666:	00 00                	add    %al,(%rax)
  400668:	e8 fe ff ff 5a       	callq  5b40066b <_end+0x5adff633>
  40066d:	00 00                	add    %al,(%rax)
  40066f:	00 00                	add    %al,(%rax)
  400671:	42 0e                	rex.X (bad) 
  400673:	10 42 0e             	adc    %al,0xe(%rdx)
  400676:	18 42 0e             	sbb    %al,0xe(%rdx)
  400679:	20 42 0e             	and    %al,0xe(%rdx)
  40067c:	28 41 0e             	sub    %al,0xe(%rcx)
  40067f:	30 41 0e             	xor    %al,0xe(%rcx)
  400682:	38 44 0e 40          	cmp    %al,0x40(%rsi,%rcx,1)
  400686:	43 83 07 86          	rex.XB addl $0xffffffffffffff86,(%r15)
  40068a:	06                   	(bad)  
  40068b:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 3ce0b1e <_end+0x36dfae6>
  400691:	8f 02                	popq   (%rdx)
  400693:	7e 0e                	jle    4006a3 <N+0xaf>
  400695:	38 41 0e             	cmp    %al,0xe(%rcx)
  400698:	30 41 0e             	xor    %al,0xe(%rcx)
  40069b:	28 42 0e             	sub    %al,0xe(%rdx)
  40069e:	20 42 0e             	and    %al,0xe(%rdx)
  4006a1:	18 42 0e             	sbb    %al,0xe(%rdx)
  4006a4:	10 42 0e             	adc    %al,0xe(%rdx)
  4006a7:	08 14 00             	or     %dl,(%rax,%rax,1)
  4006aa:	00 00                	add    %al,(%rax)
  4006ac:	84 00                	test   %al,(%rax)
  4006ae:	00 00                	add    %al,(%rax)
  4006b0:	fa                   	cli    
  4006b1:	fe                   	(bad)  
  4006b2:	ff                   	(bad)  
  4006b3:	ff 01                	incl   (%rcx)
	...

Disassembly of section .ctors:

0000000000600e18 <__init_array_end+0x4>:
  600e18:	ff                   	(bad)  
  600e19:	ff                   	(bad)  
  600e1a:	ff                   	(bad)  
  600e1b:	ff                   	(bad)  
  600e1c:	ff                   	(bad)  
  600e1d:	ff                   	(bad)  
  600e1e:	ff                   	(bad)  
  600e1f:	ff 00                	incl   (%rax)
  600e21:	00 00                	add    %al,(%rax)
  600e23:	00 00                	add    %al,(%rax)
  600e25:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dtors:

0000000000600e28 <__DTOR_END__-0x8>:
  600e28:	ff                   	(bad)  
  600e29:	ff                   	(bad)  
  600e2a:	ff                   	(bad)  
  600e2b:	ff                   	(bad)  
  600e2c:	ff                   	(bad)  
  600e2d:	ff                   	(bad)  
  600e2e:	ff                   	(bad)  
  600e2f:	ff 00                	incl   (%rax)

0000000000600e30 <__DTOR_END__>:
	...

Disassembly of section .jcr:

0000000000600e38 <.jcr>:
	...

Disassembly of section .dynamic:

0000000000600e40 <_DYNAMIC>:
  600e40:	01 00                	add    %eax,(%rax)
  600e42:	00 00                	add    %al,(%rax)
  600e44:	00 00                	add    %al,(%rax)
  600e46:	00 00                	add    %al,(%rax)
  600e48:	10 00                	adc    %al,(%rax)
  600e4a:	00 00                	add    %al,(%rax)
  600e4c:	00 00                	add    %al,(%rax)
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	0c 00                	or     $0x0,%al
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	08 04 40             	or     %al,(%rax,%rax,2)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e65 <_DYNAMIC+0x25>
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 e0                	add    %ah,%al
  600e69:	05 40 00 00 00       	add    $0x40,%eax
  600e6e:	00 00                	add    %al,(%rax)
  600e70:	04 00                	add    $0x0,%al
  600e72:	00 00                	add    %al,(%rax)
  600e74:	00 00                	add    %al,(%rax)
  600e76:	00 00                	add    %al,(%rax)
  600e78:	b0 02                	mov    $0x2,%al
  600e7a:	40 00 00             	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 f5                	add    %dh,%ch
  600e81:	fe                   	(bad)  
  600e82:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 d8                	add    %bl,%al
  600e89:	02 40 00             	add    0x0(%rax),%al
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	05 00 00 00 00       	add    $0x0,%eax
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 58 03             	add    %bl,0x3(%rax)
  600e9a:	40 00 00             	add    %al,(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 06                	add    %al,(%rsi)
  600ea1:	00 00                	add    %al,(%rax)
  600ea3:	00 00                	add    %al,(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 f8                	add    %bh,%al
  600ea9:	02 40 00             	add    0x0(%rax),%al
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	0a 00                	or     (%rax),%al
  600eb2:	00 00                	add    %al,(%rax)
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	3f                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0b                	add    %cl,(%rbx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 18                	add    %bl,(%rax)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ed5 <_DYNAMIC+0x95>
	...
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 03                	add    %al,(%rbx)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 e8                	add    %ch,%al
  600ee9:	0f 60 00             	punpcklbw (%rax),%mm0
  600eec:	00 00                	add    %al,(%rax)
  600eee:	00 00                	add    %al,(%rax)
  600ef0:	02 00                	add    (%rax),%al
  600ef2:	00 00                	add    %al,(%rax)
  600ef4:	00 00                	add    %al,(%rax)
  600ef6:	00 00                	add    %al,(%rax)
  600ef8:	30 00                	xor    %al,(%rax)
  600efa:	00 00                	add    %al,(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	14 00                	adc    $0x0,%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	07                   	(bad)  
  600f09:	00 00                	add    %al,(%rax)
  600f0b:	00 00                	add    %al,(%rax)
  600f0d:	00 00                	add    %al,(%rax)
  600f0f:	00 17                	add    %dl,(%rdi)
  600f11:	00 00                	add    %al,(%rax)
  600f13:	00 00                	add    %al,(%rax)
  600f15:	00 00                	add    %al,(%rax)
  600f17:	00 d8                	add    %bl,%al
  600f19:	03 40 00             	add    0x0(%rax),%eax
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 c0                	add    %al,%al
  600f29:	03 40 00             	add    0x0(%rax),%eax
  600f2c:	00 00                	add    %al,(%rax)
  600f2e:	00 00                	add    %al,(%rax)
  600f30:	08 00                	or     %al,(%rax)
  600f32:	00 00                	add    %al,(%rax)
  600f34:	00 00                	add    %al,(%rax)
  600f36:	00 00                	add    %al,(%rax)
  600f38:	18 00                	sbb    %al,(%rax)
  600f3a:	00 00                	add    %al,(%rax)
  600f3c:	00 00                	add    %al,(%rax)
  600f3e:	00 00                	add    %al,(%rax)
  600f40:	09 00                	or     %eax,(%rax)
  600f42:	00 00                	add    %al,(%rax)
  600f44:	00 00                	add    %al,(%rax)
  600f46:	00 00                	add    %al,(%rax)
  600f48:	18 00                	sbb    %al,(%rax)
  600f4a:	00 00                	add    %al,(%rax)
  600f4c:	00 00                	add    %al,(%rax)
  600f4e:	00 00                	add    %al,(%rax)
  600f50:	fe                   	(bad)  
  600f51:	ff                   	(bad)  
  600f52:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 a0 03 40 00 00    	add    %ah,0x4003(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 ff                	add    %bh,%bh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 01                	add    %al,(%rcx)
  600f69:	00 00                	add    %al,(%rax)
  600f6b:	00 00                	add    %al,(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 f0                	add    %dh,%al
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmpq  *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
	...

Disassembly of section .got:

0000000000600fe0 <.got>:
	...

Disassembly of section .got.plt:

0000000000600fe8 <_GLOBAL_OFFSET_TABLE_>:
  600fe8:	40 0e                	rex (bad) 
  600fea:	60                   	(bad)  
	...
  600fff:	00 36                	add    %dh,(%rsi)
  601001:	04 40                	add    $0x40,%al
  601003:	00 00                	add    %al,(%rax)
  601005:	00 00                	add    %al,(%rax)
  601007:	00 46 04             	add    %al,0x4(%rsi)
  60100a:	40 00 00             	add    %al,(%rax)
  60100d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601010 <__data_start>:
	...

0000000000601018 <__dso_handle>:
	...

0000000000601020 <d>:
__data_start():
  601020:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .bss:

0000000000601028 <.bss>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 65             	sub    %al,0x65(%rdi)
   8:	6e                   	outsb  %ds:(%rsi),(%dx)
   9:	74 6f                	je     7a <_init-0x40038e>
   b:	6f                   	outsl  %ds:(%rsi),(%dx)
   c:	20 34 2e             	and    %dh,(%rsi,%rbp,1)
   f:	35 2e 33 2d 72       	xor    $0x722d332e,%eax
  14:	32 20                	xor    (%rax),%ah
  16:	70 31                	jo     49 <_init-0x4003bf>
  18:	2e                   	cs
  19:	35 2c 20 70 69       	xor    $0x6970202c,%eax
  1e:	65                   	gs
  1f:	2d 30 2e 34 2e       	sub    $0x2e342e30,%eax
  24:	37                   	(bad)  
  25:	29 20                	sub    %esp,(%rax)
  27:	34 2e                	xor    $0x2e,%al
  29:	35                   	.byte 0x35
  2a:	2e 33 00             	xor    %cs:(%rax),%eax

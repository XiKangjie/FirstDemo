$ readelf -h traced_printer2

ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Intel 80386
  Version:                           0x1
  Entry point address:               0x8048080
  Start of program headers:          52 (bytes into file)
  Start of section headers:          236 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         2
  Size of section headers:           40 (bytes)
  Number of section headers:         6
  Section header string table index: 3


$ objdump -d -M intel traced_printer2

traced_printer2:     file format elf32-i386


Disassembly of section .text:

08048080 <_start>:
 8048080:	ba 07 00 00 00       	mov    edx,0x7
 8048085:	b9 b4 90 04 08       	mov    ecx,0x80490b4
 804808a:	bb 01 00 00 00       	mov    ebx,0x1
 804808f:	b8 04 00 00 00       	mov    eax,0x4
 8048094:	cd 80                	int    0x80
 8048096:	ba 07 00 00 00       	mov    edx,0x7
 804809b:	b9 bb 90 04 08       	mov    ecx,0x80490bb
 80480a0:	bb 01 00 00 00       	mov    ebx,0x1
 80480a5:	b8 04 00 00 00       	mov    eax,0x4
 80480aa:	cd 80                	int    0x80
 80480ac:	b8 01 00 00 00       	mov    eax,0x1
 80480b1:	cd 80                	int    0x80




$ readelf -h traced_c_loop

ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Intel 80386
  Version:                           0x1
  Entry point address:               0x8048340
  Start of program headers:          52 (bytes into file)
  Start of section headers:          2860 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         8
  Size of section headers:           40 (bytes)
  Number of section headers:         38
  Section header string table index: 35


$ objdump -d -M intel traced_c_loop

traced_c_loop:     file format elf32-i386


Disassembly of section .init:

080482b4 <_init>:
 80482b4:	55                   	push   ebp
 80482b5:	89 e5                	mov    ebp,esp
 80482b7:	53                   	push   ebx
 80482b8:	83 ec 04             	sub    esp,0x4
 80482bb:	e8 00 00 00 00       	call   80482c0 <_init+0xc>
 80482c0:	5b                   	pop    ebx
 80482c1:	81 c3 d4 13 00 00    	add    ebx,0x13d4
 80482c7:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 80482cd:	85 d2                	test   edx,edx
 80482cf:	74 05                	je     80482d6 <_init+0x22>
 80482d1:	e8 1e 00 00 00       	call   80482f4 <__gmon_start__@plt>
 80482d6:	e8 f5 00 00 00       	call   80483d0 <frame_dummy>
 80482db:	e8 d0 01 00 00       	call   80484b0 <__do_global_ctors_aux>
 80482e0:	58                   	pop    eax
 80482e1:	5b                   	pop    ebx
 80482e2:	c9                   	leave  
 80482e3:	c3                   	ret    

Disassembly of section .plt:

080482e4 <__gmon_start__@plt-0x10>:
 80482e4:	ff 35 98 96 04 08    	push   DWORD PTR ds:0x8049698
 80482ea:	ff 25 9c 96 04 08    	jmp    DWORD PTR ds:0x804969c
 80482f0:	00 00                	add    BYTE PTR [eax],al
	...

080482f4 <__gmon_start__@plt>:
 80482f4:	ff 25 a0 96 04 08    	jmp    DWORD PTR ds:0x80496a0
 80482fa:	68 00 00 00 00       	push   0x0
 80482ff:	e9 e0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048304 <__libc_start_main@plt>:
 8048304:	ff 25 a4 96 04 08    	jmp    DWORD PTR ds:0x80496a4
 804830a:	68 08 00 00 00       	push   0x8
 804830f:	e9 d0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048314 <printf@plt>:
 8048314:	ff 25 a8 96 04 08    	jmp    DWORD PTR ds:0x80496a8
 804831a:	68 10 00 00 00       	push   0x10
 804831f:	e9 c0 ff ff ff       	jmp    80482e4 <_init+0x30>

08048324 <puts@plt>:
 8048324:	ff 25 ac 96 04 08    	jmp    DWORD PTR ds:0x80496ac
 804832a:	68 18 00 00 00       	push   0x18
 804832f:	e9 b0 ff ff ff       	jmp    80482e4 <_init+0x30>

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    ebp,ebp
 8048342:	5e                   	pop    esi
 8048343:	89 e1                	mov    ecx,esp
 8048345:	83 e4 f0             	and    esp,0xfffffff0
 8048348:	50                   	push   eax
 8048349:	54                   	push   esp
 804834a:	52                   	push   edx
 804834b:	68 40 84 04 08       	push   0x8048440
 8048350:	68 50 84 04 08       	push   0x8048450
 8048355:	51                   	push   ecx
 8048356:	56                   	push   esi
 8048357:	68 09 84 04 08       	push   0x8048409
 804835c:	e8 a3 ff ff ff       	call   8048304 <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	90                   	nop
 8048363:	90                   	nop
 8048364:	90                   	nop
 8048365:	90                   	nop
 8048366:	90                   	nop
 8048367:	90                   	nop
 8048368:	90                   	nop
 8048369:	90                   	nop
 804836a:	90                   	nop
 804836b:	90                   	nop
 804836c:	90                   	nop
 804836d:	90                   	nop
 804836e:	90                   	nop
 804836f:	90                   	nop

08048370 <__do_global_dtors_aux>:
 8048370:	55                   	push   ebp
 8048371:	89 e5                	mov    ebp,esp
 8048373:	53                   	push   ebx
 8048374:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8048378:	80 3d b4 96 04 08 00 	cmp    BYTE PTR ds:0x80496b4,0x0
 804837f:	75 3e                	jne    80483bf <__do_global_dtors_aux+0x4f>
 8048381:	bb c0 95 04 08       	mov    ebx,0x80495c0
 8048386:	a1 b8 96 04 08       	mov    eax,ds:0x80496b8
 804838b:	81 eb bc 95 04 08    	sub    ebx,0x80495bc
 8048391:	c1 fb 02             	sar    ebx,0x2
 8048394:	83 eb 01             	sub    ebx,0x1
 8048397:	39 d8                	cmp    eax,ebx
 8048399:	73 1d                	jae    80483b8 <__do_global_dtors_aux+0x48>
 804839b:	90                   	nop
 804839c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80483a0:	83 c0 01             	add    eax,0x1
 80483a3:	a3 b8 96 04 08       	mov    ds:0x80496b8,eax
 80483a8:	ff 14 85 bc 95 04 08 	call   DWORD PTR [eax*4+0x80495bc]
 80483af:	a1 b8 96 04 08       	mov    eax,ds:0x80496b8
 80483b4:	39 d8                	cmp    eax,ebx
 80483b6:	72 e8                	jb     80483a0 <__do_global_dtors_aux+0x30>
 80483b8:	c6 05 b4 96 04 08 01 	mov    BYTE PTR ds:0x80496b4,0x1
 80483bf:	8d 64 24 04          	lea    esp,[esp+0x4]
 80483c3:	5b                   	pop    ebx
 80483c4:	5d                   	pop    ebp
 80483c5:	c3                   	ret    
 80483c6:	8d 76 00             	lea    esi,[esi+0x0]
 80483c9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483d0 <frame_dummy>:
 80483d0:	55                   	push   ebp
 80483d1:	89 e5                	mov    ebp,esp
 80483d3:	8d 64 24 e8          	lea    esp,[esp-0x18]
 80483d7:	a1 c4 95 04 08       	mov    eax,ds:0x80495c4
 80483dc:	85 c0                	test   eax,eax
 80483de:	74 12                	je     80483f2 <frame_dummy+0x22>
 80483e0:	b8 00 00 00 00       	mov    eax,0x0
 80483e5:	85 c0                	test   eax,eax
 80483e7:	74 09                	je     80483f2 <frame_dummy+0x22>
 80483e9:	c7 04 24 c4 95 04 08 	mov    DWORD PTR [esp],0x80495c4
 80483f0:	ff d0                	call   eax
 80483f2:	c9                   	leave  
 80483f3:	c3                   	ret    

080483f4 <do_stuff>:
 80483f4:	55                   	push   ebp
 80483f5:	89 e5                	mov    ebp,esp
 80483f7:	83 ec 18             	sub    esp,0x18
 80483fa:	b8 04 85 04 08       	mov    eax,0x8048504
 80483ff:	89 04 24             	mov    DWORD PTR [esp],eax
 8048402:	e8 0d ff ff ff       	call   8048314 <printf@plt>
 8048407:	c9                   	leave  
 8048408:	c3                   	ret    

08048409 <main>:
 8048409:	55                   	push   ebp
 804840a:	89 e5                	mov    ebp,esp
 804840c:	83 e4 f0             	and    esp,0xfffffff0
 804840f:	83 ec 20             	sub    esp,0x20
 8048412:	c7 44 24 1c 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
 8048419:	00 
 804841a:	eb 0a                	jmp    8048426 <main+0x1d>
 804841c:	e8 d3 ff ff ff       	call   80483f4 <do_stuff>
 8048421:	83 44 24 1c 01       	add    DWORD PTR [esp+0x1c],0x1
 8048426:	83 7c 24 1c 03       	cmp    DWORD PTR [esp+0x1c],0x3
 804842b:	7e ef                	jle    804841c <main+0x13>
 804842d:	c7 04 24 0c 85 04 08 	mov    DWORD PTR [esp],0x804850c
 8048434:	e8 eb fe ff ff       	call   8048324 <puts@plt>
 8048439:	b8 00 00 00 00       	mov    eax,0x0
 804843e:	c9                   	leave  
 804843f:	c3                   	ret    

08048440 <__libc_csu_fini>:
 8048440:	55                   	push   ebp
 8048441:	89 e5                	mov    ebp,esp
 8048443:	5d                   	pop    ebp
 8048444:	c3                   	ret    
 8048445:	66 66 2e 0f 1f 84 00 	data32 nop WORD PTR cs:[eax+eax*1+0x0]
 804844c:	00 00 00 00 

08048450 <__libc_csu_init>:
 8048450:	55                   	push   ebp
 8048451:	89 e5                	mov    ebp,esp
 8048453:	57                   	push   edi
 8048454:	56                   	push   esi
 8048455:	53                   	push   ebx
 8048456:	e8 4f 00 00 00       	call   80484aa <__i686.get_pc_thunk.bx>
 804845b:	81 c3 39 12 00 00    	add    ebx,0x1239
 8048461:	83 ec 1c             	sub    esp,0x1c
 8048464:	e8 4b fe ff ff       	call   80482b4 <_init>
 8048469:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 804846f:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048475:	29 c7                	sub    edi,eax
 8048477:	c1 ff 02             	sar    edi,0x2
 804847a:	85 ff                	test   edi,edi
 804847c:	74 24                	je     80484a2 <__libc_csu_init+0x52>
 804847e:	31 f6                	xor    esi,esi
 8048480:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048483:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048487:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804848a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804848e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048491:	89 04 24             	mov    DWORD PTR [esp],eax
 8048494:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 804849b:	83 c6 01             	add    esi,0x1
 804849e:	39 fe                	cmp    esi,edi
 80484a0:	72 de                	jb     8048480 <__libc_csu_init+0x30>
 80484a2:	83 c4 1c             	add    esp,0x1c
 80484a5:	5b                   	pop    ebx
 80484a6:	5e                   	pop    esi
 80484a7:	5f                   	pop    edi
 80484a8:	5d                   	pop    ebp
 80484a9:	c3                   	ret    

080484aa <__i686.get_pc_thunk.bx>:
 80484aa:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80484ad:	c3                   	ret    
 80484ae:	90                   	nop
 80484af:	90                   	nop

080484b0 <__do_global_ctors_aux>:
 80484b0:	55                   	push   ebp
 80484b1:	89 e5                	mov    ebp,esp
 80484b3:	53                   	push   ebx
 80484b4:	8d 64 24 fc          	lea    esp,[esp-0x4]
 80484b8:	a1 b4 95 04 08       	mov    eax,ds:0x80495b4
 80484bd:	83 f8 ff             	cmp    eax,0xffffffff
 80484c0:	74 12                	je     80484d4 <__do_global_ctors_aux+0x24>
 80484c2:	bb b4 95 04 08       	mov    ebx,0x80495b4
 80484c7:	90                   	nop
 80484c8:	8d 5b fc             	lea    ebx,[ebx-0x4]
 80484cb:	ff d0                	call   eax
 80484cd:	8b 03                	mov    eax,DWORD PTR [ebx]
 80484cf:	83 f8 ff             	cmp    eax,0xffffffff
 80484d2:	75 f4                	jne    80484c8 <__do_global_ctors_aux+0x18>
 80484d4:	8d 64 24 04          	lea    esp,[esp+0x4]
 80484d8:	5b                   	pop    ebx
 80484d9:	5d                   	pop    ebp
 80484da:	c3                   	ret    
 80484db:	90                   	nop

Disassembly of section .fini:

080484dc <_fini>:
 80484dc:	55                   	push   ebp
 80484dd:	89 e5                	mov    ebp,esp
 80484df:	53                   	push   ebx
 80484e0:	83 ec 04             	sub    esp,0x4
 80484e3:	e8 00 00 00 00       	call   80484e8 <_fini+0xc>
 80484e8:	5b                   	pop    ebx
 80484e9:	81 c3 ac 11 00 00    	add    ebx,0x11ac
 80484ef:	e8 7c fe ff ff       	call   8048370 <__do_global_dtors_aux>
 80484f4:	59                   	pop    ecx
 80484f5:	5b                   	pop    ebx
 80484f6:	c9                   	leave  
 80484f7:	c3                   	ret    



$ ./bp_use_lib traced_c_loop

Hello, Hello, Hello, Hello, world!
[15748] debugger started
[15748] child now at EIP = 0x001d7850
[15748] breakpoint created
[15748] child stopped at breakpoint. EIP = 0x080483F5
[15748] resuming
[15748] child stopped at breakpoint. EIP = 0x080483F5
[15748] resuming
[15748] child stopped at breakpoint. EIP = 0x080483F5
[15748] resuming
[15748] child stopped at breakpoint. EIP = 0x080483F5
[15748] resuming
[15748] child exited


$ ./bp_manual traced_printer2

Hello,
world!
[15772] debugger started
[15772] Child started. EIP = 0x08048080
[15772] Original data at 0x08048096: 0x000007ba
[15772] After trap, data at 0x08048096: 0x000007cc
[15772] Child got a signal: Trace/breakpoint trap
[15772] Child stopped at EIP = 0x08048097
[15772] Child exited

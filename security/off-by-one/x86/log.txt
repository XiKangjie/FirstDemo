$ objdump -d -M intel vuln

vuln:     file format elf32-i386


Disassembly of section .init:

080482f4 <_init>:
 80482f4:	55                   	push   ebp
 80482f5:	89 e5                	mov    ebp,esp
 80482f7:	53                   	push   ebx
 80482f8:	83 ec 04             	sub    esp,0x4
 80482fb:	e8 00 00 00 00       	call   8048300 <_init+0xc>
 8048300:	5b                   	pop    ebx
 8048301:	81 c3 54 14 00 00    	add    ebx,0x1454
 8048307:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 804830d:	85 d2                	test   edx,edx
 804830f:	74 05                	je     8048316 <_init+0x22>
 8048311:	e8 1e 00 00 00       	call   8048334 <__gmon_start__@plt>
 8048316:	e8 15 01 00 00       	call   8048430 <frame_dummy>
 804831b:	e8 40 02 00 00       	call   8048560 <__do_global_ctors_aux>
 8048320:	58                   	pop    eax
 8048321:	5b                   	pop    ebx
 8048322:	c9                   	leave  
 8048323:	c3                   	ret    

Disassembly of section .plt:

08048324 <__gmon_start__@plt-0x10>:
 8048324:	ff 35 58 97 04 08    	push   DWORD PTR ds:0x8049758
 804832a:	ff 25 5c 97 04 08    	jmp    DWORD PTR ds:0x804975c
 8048330:	00 00                	add    BYTE PTR [eax],al
	...

08048334 <__gmon_start__@plt>:
 8048334:	ff 25 60 97 04 08    	jmp    DWORD PTR ds:0x8049760
 804833a:	68 00 00 00 00       	push   0x0
 804833f:	e9 e0 ff ff ff       	jmp    8048324 <_init+0x30>

08048344 <__libc_start_main@plt>:
 8048344:	ff 25 64 97 04 08    	jmp    DWORD PTR ds:0x8049764
 804834a:	68 08 00 00 00       	push   0x8
 804834f:	e9 d0 ff ff ff       	jmp    8048324 <_init+0x30>

08048354 <strlen@plt>:
 8048354:	ff 25 68 97 04 08    	jmp    DWORD PTR ds:0x8049768
 804835a:	68 10 00 00 00       	push   0x10
 804835f:	e9 c0 ff ff ff       	jmp    8048324 <_init+0x30>

08048364 <strcpy@plt>:
 8048364:	ff 25 6c 97 04 08    	jmp    DWORD PTR ds:0x804976c
 804836a:	68 18 00 00 00       	push   0x18
 804836f:	e9 b0 ff ff ff       	jmp    8048324 <_init+0x30>

08048374 <printf@plt>:
 8048374:	ff 25 70 97 04 08    	jmp    DWORD PTR ds:0x8049770
 804837a:	68 20 00 00 00       	push   0x20
 804837f:	e9 a0 ff ff ff       	jmp    8048324 <_init+0x30>

08048384 <puts@plt>:
 8048384:	ff 25 74 97 04 08    	jmp    DWORD PTR ds:0x8049774
 804838a:	68 28 00 00 00       	push   0x28
 804838f:	e9 90 ff ff ff       	jmp    8048324 <_init+0x30>

Disassembly of section .text:

080483a0 <_start>:
 80483a0:	31 ed                	xor    ebp,ebp
 80483a2:	5e                   	pop    esi
 80483a3:	89 e1                	mov    ecx,esp
 80483a5:	83 e4 f0             	and    esp,0xfffffff0
 80483a8:	50                   	push   eax
 80483a9:	54                   	push   esp
 80483aa:	52                   	push   edx
 80483ab:	68 f0 84 04 08       	push   0x80484f0
 80483b0:	68 00 85 04 08       	push   0x8048500
 80483b5:	51                   	push   ecx
 80483b6:	56                   	push   esi
 80483b7:	68 9e 84 04 08       	push   0x804849e
 80483bc:	e8 83 ff ff ff       	call   8048344 <__libc_start_main@plt>
 80483c1:	f4                   	hlt    
 80483c2:	90                   	nop
 80483c3:	90                   	nop
 80483c4:	90                   	nop
 80483c5:	90                   	nop
 80483c6:	90                   	nop
 80483c7:	90                   	nop
 80483c8:	90                   	nop
 80483c9:	90                   	nop
 80483ca:	90                   	nop
 80483cb:	90                   	nop
 80483cc:	90                   	nop
 80483cd:	90                   	nop
 80483ce:	90                   	nop
 80483cf:	90                   	nop

080483d0 <__do_global_dtors_aux>:
 80483d0:	55                   	push   ebp
 80483d1:	89 e5                	mov    ebp,esp
 80483d3:	53                   	push   ebx
 80483d4:	8d 64 24 fc          	lea    esp,[esp-0x4]
 80483d8:	80 3d 7c 97 04 08 00 	cmp    BYTE PTR ds:0x804977c,0x0
 80483df:	75 3e                	jne    804841f <__do_global_dtors_aux+0x4f>
 80483e1:	bb 80 96 04 08       	mov    ebx,0x8049680
 80483e6:	a1 80 97 04 08       	mov    eax,ds:0x8049780
 80483eb:	81 eb 7c 96 04 08    	sub    ebx,0x804967c
 80483f1:	c1 fb 02             	sar    ebx,0x2
 80483f4:	83 eb 01             	sub    ebx,0x1
 80483f7:	39 d8                	cmp    eax,ebx
 80483f9:	73 1d                	jae    8048418 <__do_global_dtors_aux+0x48>
 80483fb:	90                   	nop
 80483fc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048400:	83 c0 01             	add    eax,0x1
 8048403:	a3 80 97 04 08       	mov    ds:0x8049780,eax
 8048408:	ff 14 85 7c 96 04 08 	call   DWORD PTR [eax*4+0x804967c]
 804840f:	a1 80 97 04 08       	mov    eax,ds:0x8049780
 8048414:	39 d8                	cmp    eax,ebx
 8048416:	72 e8                	jb     8048400 <__do_global_dtors_aux+0x30>
 8048418:	c6 05 7c 97 04 08 01 	mov    BYTE PTR ds:0x804977c,0x1
 804841f:	8d 64 24 04          	lea    esp,[esp+0x4]
 8048423:	5b                   	pop    ebx
 8048424:	5d                   	pop    ebp
 8048425:	c3                   	ret    
 8048426:	8d 76 00             	lea    esi,[esi+0x0]
 8048429:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

08048430 <frame_dummy>:
 8048430:	55                   	push   ebp
 8048431:	89 e5                	mov    ebp,esp
 8048433:	8d 64 24 e8          	lea    esp,[esp-0x18]
 8048437:	a1 84 96 04 08       	mov    eax,ds:0x8049684
 804843c:	85 c0                	test   eax,eax
 804843e:	74 12                	je     8048452 <frame_dummy+0x22>
 8048440:	b8 00 00 00 00       	mov    eax,0x0
 8048445:	85 c0                	test   eax,eax
 8048447:	74 09                	je     8048452 <frame_dummy+0x22>
 8048449:	c7 04 24 84 96 04 08 	mov    DWORD PTR [esp],0x8049684
 8048450:	ff d0                	call   eax
 8048452:	c9                   	leave  
 8048453:	c3                   	ret    

08048454 <foo>:
 8048454:	55                   	push   ebp
 8048455:	89 e5                	mov    ebp,esp
 8048457:	83 ec 04             	sub    esp,0x4
 804845a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804845d:	89 04 24             	mov    DWORD PTR [esp],eax
 8048460:	e8 02 00 00 00       	call   8048467 <bar>
 8048465:	c9                   	leave  
 8048466:	c3                   	ret    

08048467 <bar>:
 8048467:	55                   	push   ebp
 8048468:	89 e5                	mov    ebp,esp
 804846a:	81 ec 08 01 00 00    	sub    esp,0x108
 8048470:	b8 b4 85 04 08       	mov    eax,0x80485b4
 8048475:	8d 95 00 ff ff ff    	lea    edx,[ebp-0x100]
 804847b:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 804847f:	89 04 24             	mov    DWORD PTR [esp],eax
 8048482:	e8 ed fe ff ff       	call   8048374 <printf@plt>
 8048487:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 804848a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804848e:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
 8048494:	89 04 24             	mov    DWORD PTR [esp],eax
 8048497:	e8 c8 fe ff ff       	call   8048364 <strcpy@plt>
 804849c:	c9                   	leave  
 804849d:	c3                   	ret    

0804849e <main>:
 804849e:	55                   	push   ebp
 804849f:	89 e5                	mov    ebp,esp
 80484a1:	83 ec 04             	sub    esp,0x4
 80484a4:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 80484a7:	83 c0 04             	add    eax,0x4
 80484aa:	8b 00                	mov    eax,DWORD PTR [eax]
 80484ac:	89 04 24             	mov    DWORD PTR [esp],eax
 80484af:	e8 a0 fe ff ff       	call   8048354 <strlen@plt>
 80484b4:	3d 00 01 00 00       	cmp    eax,0x100
 80484b9:	76 13                	jbe    80484ce <main+0x30>
 80484bb:	c7 04 24 b8 85 04 08 	mov    DWORD PTR [esp],0x80485b8
 80484c2:	e8 bd fe ff ff       	call   8048384 <puts@plt>
 80484c7:	b8 ff ff ff ff       	mov    eax,0xffffffff
 80484cc:	eb 15                	jmp    80484e3 <main+0x45>
 80484ce:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 80484d1:	83 c0 04             	add    eax,0x4
 80484d4:	8b 00                	mov    eax,DWORD PTR [eax]
 80484d6:	89 04 24             	mov    DWORD PTR [esp],eax
 80484d9:	e8 76 ff ff ff       	call   8048454 <foo>
 80484de:	b8 00 00 00 00       	mov    eax,0x0
 80484e3:	c9                   	leave  
 80484e4:	c3                   	ret    
 80484e5:	90                   	nop
 80484e6:	90                   	nop
 80484e7:	90                   	nop
 80484e8:	90                   	nop
 80484e9:	90                   	nop
 80484ea:	90                   	nop
 80484eb:	90                   	nop
 80484ec:	90                   	nop
 80484ed:	90                   	nop
 80484ee:	90                   	nop
 80484ef:	90                   	nop

080484f0 <__libc_csu_fini>:
 80484f0:	55                   	push   ebp
 80484f1:	89 e5                	mov    ebp,esp
 80484f3:	5d                   	pop    ebp
 80484f4:	c3                   	ret    
 80484f5:	66 66 2e 0f 1f 84 00 	data32 nop WORD PTR cs:[eax+eax*1+0x0]
 80484fc:	00 00 00 00 

08048500 <__libc_csu_init>:
 8048500:	55                   	push   ebp
 8048501:	89 e5                	mov    ebp,esp
 8048503:	57                   	push   edi
 8048504:	56                   	push   esi
 8048505:	53                   	push   ebx
 8048506:	e8 4f 00 00 00       	call   804855a <__i686.get_pc_thunk.bx>
 804850b:	81 c3 49 12 00 00    	add    ebx,0x1249
 8048511:	83 ec 1c             	sub    esp,0x1c
 8048514:	e8 db fd ff ff       	call   80482f4 <_init>
 8048519:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 804851f:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048525:	29 c7                	sub    edi,eax
 8048527:	c1 ff 02             	sar    edi,0x2
 804852a:	85 ff                	test   edi,edi
 804852c:	74 24                	je     8048552 <__libc_csu_init+0x52>
 804852e:	31 f6                	xor    esi,esi
 8048530:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 8048533:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048537:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 804853a:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804853e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8048541:	89 04 24             	mov    DWORD PTR [esp],eax
 8048544:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 804854b:	83 c6 01             	add    esi,0x1
 804854e:	39 fe                	cmp    esi,edi
 8048550:	72 de                	jb     8048530 <__libc_csu_init+0x30>
 8048552:	83 c4 1c             	add    esp,0x1c
 8048555:	5b                   	pop    ebx
 8048556:	5e                   	pop    esi
 8048557:	5f                   	pop    edi
 8048558:	5d                   	pop    ebp
 8048559:	c3                   	ret    

0804855a <__i686.get_pc_thunk.bx>:
 804855a:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 804855d:	c3                   	ret    
 804855e:	90                   	nop
 804855f:	90                   	nop

08048560 <__do_global_ctors_aux>:
 8048560:	55                   	push   ebp
 8048561:	89 e5                	mov    ebp,esp
 8048563:	53                   	push   ebx
 8048564:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8048568:	a1 74 96 04 08       	mov    eax,ds:0x8049674
 804856d:	83 f8 ff             	cmp    eax,0xffffffff
 8048570:	74 12                	je     8048584 <__do_global_ctors_aux+0x24>
 8048572:	bb 74 96 04 08       	mov    ebx,0x8049674
 8048577:	90                   	nop
 8048578:	8d 5b fc             	lea    ebx,[ebx-0x4]
 804857b:	ff d0                	call   eax
 804857d:	8b 03                	mov    eax,DWORD PTR [ebx]
 804857f:	83 f8 ff             	cmp    eax,0xffffffff
 8048582:	75 f4                	jne    8048578 <__do_global_ctors_aux+0x18>
 8048584:	8d 64 24 04          	lea    esp,[esp+0x4]
 8048588:	5b                   	pop    ebx
 8048589:	5d                   	pop    ebp
 804858a:	c3                   	ret    
 804858b:	90                   	nop

Disassembly of section .fini:

0804858c <_fini>:
 804858c:	55                   	push   ebp
 804858d:	89 e5                	mov    ebp,esp
 804858f:	53                   	push   ebx
 8048590:	83 ec 04             	sub    esp,0x4
 8048593:	e8 00 00 00 00       	call   8048598 <_fini+0xc>
 8048598:	5b                   	pop    ebx
 8048599:	81 c3 bc 11 00 00    	add    ebx,0x11bc
 804859f:	e8 2c fe ff ff       	call   80483d0 <__do_global_dtors_aux>
 80485a4:	59                   	pop    ecx
 80485a5:	5b                   	pop    ebx
 80485a6:	c9                   	leave  
 80485a7:	c3                   	ret    



[consen@centos x86]$ ./vuln 123
a: 0xbffff638
buf: 0xbffff528
[consen@centos x86]$ vim exp.py
[consen@centos x86]$ python exp.py
Calling vulnerable program
a: 0xbffff538
buf: 0xbffff428
[consen@centos x86]$ vim exp.py
[consen@centos x86]$ python exp.py
Calling vulnerable program
a: 0xbffff538
buf: 0xbffff428
sh-4.1# whoami
root
sh-4.1# id
uid=0(root) gid=500(consen) groups=500(consen) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
sh-4.1# exit
exit
[consen@centos x86]$

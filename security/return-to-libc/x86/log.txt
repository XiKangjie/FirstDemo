$ readelf -l vuln

Elf file type is EXEC (Executable file)
Entry point 0x8048420
There are 8 program headers, starting at offset 52

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  PHDR           0x000034 0x08048034 0x08048034 0x00100 0x00100 R E 0x4
  INTERP         0x000134 0x08048134 0x08048134 0x00013 0x00013 R   0x1
      [Requesting program interpreter: /lib/ld-linux.so.2]
  LOAD           0x000000 0x08048000 0x08048000 0x006bc 0x006bc R E 0x1000
  LOAD           0x0006bc 0x080496bc 0x080496bc 0x00110 0x00130 RW  0x1000
  DYNAMIC        0x0006d0 0x080496d0 0x080496d0 0x000c8 0x000c8 RW  0x4
  NOTE           0x000148 0x08048148 0x08048148 0x00044 0x00044 R   0x4
  GNU_EH_FRAME   0x00061c 0x0804861c 0x0804861c 0x00024 0x00024 R   0x4
  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x4

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rel.dyn .rel.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame 
   03     .ctors .dtors .jcr .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     

$ objdump -d -M intel vuln

vuln:     file format elf32-i386


Disassembly of section .init:

0804835c <_init>:
 804835c:	55                   	push   ebp
 804835d:	89 e5                	mov    ebp,esp
 804835f:	53                   	push   ebx
 8048360:	83 ec 04             	sub    esp,0x4
 8048363:	e8 00 00 00 00       	call   8048368 <_init+0xc>
 8048368:	5b                   	pop    ebx
 8048369:	81 c3 44 14 00 00    	add    ebx,0x1444
 804836f:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 8048375:	85 d2                	test   edx,edx
 8048377:	74 05                	je     804837e <_init+0x22>
 8048379:	e8 1e 00 00 00       	call   804839c <__gmon_start__@plt>
 804837e:	e8 2d 01 00 00       	call   80484b0 <frame_dummy>
 8048383:	e8 48 02 00 00       	call   80485d0 <__do_global_ctors_aux>
 8048388:	58                   	pop    eax
 8048389:	5b                   	pop    ebx
 804838a:	c9                   	leave  
 804838b:	c3                   	ret    

Disassembly of section .plt:

0804838c <__gmon_start__@plt-0x10>:
 804838c:	ff 35 b0 97 04 08    	push   DWORD PTR ds:0x80497b0
 8048392:	ff 25 b4 97 04 08    	jmp    DWORD PTR ds:0x80497b4
 8048398:	00 00                	add    BYTE PTR [eax],al
	...

0804839c <__gmon_start__@plt>:
 804839c:	ff 25 b8 97 04 08    	jmp    DWORD PTR ds:0x80497b8
 80483a2:	68 00 00 00 00       	push   0x0
 80483a7:	e9 e0 ff ff ff       	jmp    804838c <_init+0x30>

080483ac <__libc_start_main@plt>:
 80483ac:	ff 25 bc 97 04 08    	jmp    DWORD PTR ds:0x80497bc
 80483b2:	68 08 00 00 00       	push   0x8
 80483b7:	e9 d0 ff ff ff       	jmp    804838c <_init+0x30>

080483bc <fflush@plt>:
 80483bc:	ff 25 c0 97 04 08    	jmp    DWORD PTR ds:0x80497c0
 80483c2:	68 10 00 00 00       	push   0x10
 80483c7:	e9 c0 ff ff ff       	jmp    804838c <_init+0x30>

080483cc <setuid@plt>:
 80483cc:	ff 25 c4 97 04 08    	jmp    DWORD PTR ds:0x80497c4
 80483d2:	68 18 00 00 00       	push   0x18
 80483d7:	e9 b0 ff ff ff       	jmp    804838c <_init+0x30>

080483dc <strcpy@plt>:
 80483dc:	ff 25 c8 97 04 08    	jmp    DWORD PTR ds:0x80497c8
 80483e2:	68 20 00 00 00       	push   0x20
 80483e7:	e9 a0 ff ff ff       	jmp    804838c <_init+0x30>

080483ec <printf@plt>:
 80483ec:	ff 25 cc 97 04 08    	jmp    DWORD PTR ds:0x80497cc
 80483f2:	68 28 00 00 00       	push   0x28
 80483f7:	e9 90 ff ff ff       	jmp    804838c <_init+0x30>

080483fc <getuid@plt>:
 80483fc:	ff 25 d0 97 04 08    	jmp    DWORD PTR ds:0x80497d0
 8048402:	68 30 00 00 00       	push   0x30
 8048407:	e9 80 ff ff ff       	jmp    804838c <_init+0x30>

0804840c <puts@plt>:
 804840c:	ff 25 d4 97 04 08    	jmp    DWORD PTR ds:0x80497d4
 8048412:	68 38 00 00 00       	push   0x38
 8048417:	e9 70 ff ff ff       	jmp    804838c <_init+0x30>

Disassembly of section .text:

08048420 <_start>:
 8048420:	31 ed                	xor    ebp,ebp
 8048422:	5e                   	pop    esi
 8048423:	89 e1                	mov    ecx,esp
 8048425:	83 e4 f0             	and    esp,0xfffffff0
 8048428:	50                   	push   eax
 8048429:	54                   	push   esp
 804842a:	52                   	push   edx
 804842b:	68 60 85 04 08       	push   0x8048560
 8048430:	68 70 85 04 08       	push   0x8048570
 8048435:	51                   	push   ecx
 8048436:	56                   	push   esi
 8048437:	68 d4 84 04 08       	push   0x80484d4
 804843c:	e8 6b ff ff ff       	call   80483ac <__libc_start_main@plt>
 8048441:	f4                   	hlt    
 8048442:	90                   	nop
 8048443:	90                   	nop
 8048444:	90                   	nop
 8048445:	90                   	nop
 8048446:	90                   	nop
 8048447:	90                   	nop
 8048448:	90                   	nop
 8048449:	90                   	nop
 804844a:	90                   	nop
 804844b:	90                   	nop
 804844c:	90                   	nop
 804844d:	90                   	nop
 804844e:	90                   	nop
 804844f:	90                   	nop

08048450 <__do_global_dtors_aux>:
 8048450:	55                   	push   ebp
 8048451:	89 e5                	mov    ebp,esp
 8048453:	53                   	push   ebx
 8048454:	8d 64 24 fc          	lea    esp,[esp-0x4]
 8048458:	80 3d e4 97 04 08 00 	cmp    BYTE PTR ds:0x80497e4,0x0
 804845f:	75 3e                	jne    804849f <__do_global_dtors_aux+0x4f>
 8048461:	bb d8 96 04 08       	mov    ebx,0x80496d8
 8048466:	a1 e8 97 04 08       	mov    eax,ds:0x80497e8
 804846b:	81 eb d4 96 04 08    	sub    ebx,0x80496d4
 8048471:	c1 fb 02             	sar    ebx,0x2
 8048474:	83 eb 01             	sub    ebx,0x1
 8048477:	39 d8                	cmp    eax,ebx
 8048479:	73 1d                	jae    8048498 <__do_global_dtors_aux+0x48>
 804847b:	90                   	nop
 804847c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048480:	83 c0 01             	add    eax,0x1
 8048483:	a3 e8 97 04 08       	mov    ds:0x80497e8,eax
 8048488:	ff 14 85 d4 96 04 08 	call   DWORD PTR [eax*4+0x80496d4]
 804848f:	a1 e8 97 04 08       	mov    eax,ds:0x80497e8
 8048494:	39 d8                	cmp    eax,ebx
 8048496:	72 e8                	jb     8048480 <__do_global_dtors_aux+0x30>
 8048498:	c6 05 e4 97 04 08 01 	mov    BYTE PTR ds:0x80497e4,0x1
 804849f:	8d 64 24 04          	lea    esp,[esp+0x4]
 80484a3:	5b                   	pop    ebx
 80484a4:	5d                   	pop    ebp
 80484a5:	c3                   	ret    
 80484a6:	8d 76 00             	lea    esi,[esi+0x0]
 80484a9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484b0 <frame_dummy>:
 80484b0:	55                   	push   ebp
 80484b1:	89 e5                	mov    ebp,esp
 80484b3:	8d 64 24 e8          	lea    esp,[esp-0x18]
 80484b7:	a1 dc 96 04 08       	mov    eax,ds:0x80496dc
 80484bc:	85 c0                	test   eax,eax
 80484be:	74 12                	je     80484d2 <frame_dummy+0x22>
 80484c0:	b8 00 00 00 00       	mov    eax,0x0
 80484c5:	85 c0                	test   eax,eax
 80484c7:	74 09                	je     80484d2 <frame_dummy+0x22>
 80484c9:	c7 04 24 dc 96 04 08 	mov    DWORD PTR [esp],0x80496dc
 80484d0:	ff d0                	call   eax
 80484d2:	c9                   	leave  
 80484d3:	c3                   	ret    

080484d4 <main>:
 80484d4:	55                   	push   ebp
 80484d5:	89 e5                	mov    ebp,esp
 80484d7:	81 ec 08 01 00 00    	sub    esp,0x108
 80484dd:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
 80484e4:	e8 e3 fe ff ff       	call   80483cc <setuid@plt>
 80484e9:	e8 0e ff ff ff       	call   80483fc <getuid@plt>
 80484ee:	ba 24 86 04 08       	mov    edx,0x8048624
 80484f3:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80484f7:	89 14 24             	mov    DWORD PTR [esp],edx
 80484fa:	e8 ed fe ff ff       	call   80483ec <printf@plt>
 80484ff:	b8 28 86 04 08       	mov    eax,0x8048628
 8048504:	8d 95 00 ff ff ff    	lea    edx,[ebp-0x100]
 804850a:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 804850e:	89 04 24             	mov    DWORD PTR [esp],eax
 8048511:	e8 d6 fe ff ff       	call   80483ec <printf@plt>
 8048516:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048519:	83 c0 04             	add    eax,0x4
 804851c:	8b 00                	mov    eax,DWORD PTR [eax]
 804851e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 8048522:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
 8048528:	89 04 24             	mov    DWORD PTR [esp],eax
 804852b:	e8 ac fe ff ff       	call   80483dc <strcpy@plt>
 8048530:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
 8048536:	89 04 24             	mov    DWORD PTR [esp],eax
 8048539:	e8 ce fe ff ff       	call   804840c <puts@plt>
 804853e:	a1 e0 97 04 08       	mov    eax,ds:0x80497e0
 8048543:	89 04 24             	mov    DWORD PTR [esp],eax
 8048546:	e8 71 fe ff ff       	call   80483bc <fflush@plt>
 804854b:	b8 00 00 00 00       	mov    eax,0x0
 8048550:	c9                   	leave  
 8048551:	c3                   	ret    
 8048552:	90                   	nop
 8048553:	90                   	nop
 8048554:	90                   	nop
 8048555:	90                   	nop
 8048556:	90                   	nop
 8048557:	90                   	nop
 8048558:	90                   	nop
 8048559:	90                   	nop
 804855a:	90                   	nop
 804855b:	90                   	nop
 804855c:	90                   	nop
 804855d:	90                   	nop
 804855e:	90                   	nop
 804855f:	90                   	nop

08048560 <__libc_csu_fini>:
 8048560:	55                   	push   ebp
 8048561:	89 e5                	mov    ebp,esp
 8048563:	5d                   	pop    ebp
 8048564:	c3                   	ret    
 8048565:	66 66 2e 0f 1f 84 00 	data32 nop WORD PTR cs:[eax+eax*1+0x0]
 804856c:	00 00 00 00 

08048570 <__libc_csu_init>:
 8048570:	55                   	push   ebp
 8048571:	89 e5                	mov    ebp,esp
 8048573:	57                   	push   edi
 8048574:	56                   	push   esi
 8048575:	53                   	push   ebx
 8048576:	e8 4f 00 00 00       	call   80485ca <__i686.get_pc_thunk.bx>
 804857b:	81 c3 31 12 00 00    	add    ebx,0x1231
 8048581:	83 ec 1c             	sub    esp,0x1c
 8048584:	e8 d3 fd ff ff       	call   804835c <_init>
 8048589:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 804858f:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048595:	29 c7                	sub    edi,eax
 8048597:	c1 ff 02             	sar    edi,0x2
 804859a:	85 ff                	test   edi,edi
 804859c:	74 24                	je     80485c2 <__libc_csu_init+0x52>
 804859e:	31 f6                	xor    esi,esi
 80485a0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 80485a3:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80485a7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 80485aa:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80485ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80485b1:	89 04 24             	mov    DWORD PTR [esp],eax
 80485b4:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 80485bb:	83 c6 01             	add    esi,0x1
 80485be:	39 fe                	cmp    esi,edi
 80485c0:	72 de                	jb     80485a0 <__libc_csu_init+0x30>
 80485c2:	83 c4 1c             	add    esp,0x1c
 80485c5:	5b                   	pop    ebx
 80485c6:	5e                   	pop    esi
 80485c7:	5f                   	pop    edi
 80485c8:	5d                   	pop    ebp
 80485c9:	c3                   	ret    

080485ca <__i686.get_pc_thunk.bx>:
 80485ca:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80485cd:	c3                   	ret    
 80485ce:	90                   	nop
 80485cf:	90                   	nop

080485d0 <__do_global_ctors_aux>:
 80485d0:	55                   	push   ebp
 80485d1:	89 e5                	mov    ebp,esp
 80485d3:	53                   	push   ebx
 80485d4:	8d 64 24 fc          	lea    esp,[esp-0x4]
 80485d8:	a1 cc 96 04 08       	mov    eax,ds:0x80496cc
 80485dd:	83 f8 ff             	cmp    eax,0xffffffff
 80485e0:	74 12                	je     80485f4 <__do_global_ctors_aux+0x24>
 80485e2:	bb cc 96 04 08       	mov    ebx,0x80496cc
 80485e7:	90                   	nop
 80485e8:	8d 5b fc             	lea    ebx,[ebx-0x4]
 80485eb:	ff d0                	call   eax
 80485ed:	8b 03                	mov    eax,DWORD PTR [ebx]
 80485ef:	83 f8 ff             	cmp    eax,0xffffffff
 80485f2:	75 f4                	jne    80485e8 <__do_global_ctors_aux+0x18>
 80485f4:	8d 64 24 04          	lea    esp,[esp+0x4]
 80485f8:	5b                   	pop    ebx
 80485f9:	5d                   	pop    ebp
 80485fa:	c3                   	ret    
 80485fb:	90                   	nop

Disassembly of section .fini:

080485fc <_fini>:
 80485fc:	55                   	push   ebp
 80485fd:	89 e5                	mov    ebp,esp
 80485ff:	53                   	push   ebx
 8048600:	83 ec 04             	sub    esp,0x4
 8048603:	e8 00 00 00 00       	call   8048608 <_fini+0xc>
 8048608:	5b                   	pop    ebx
 8048609:	81 c3 a4 11 00 00    	add    ebx,0x11a4
 804860f:	e8 3c fe ff ff       	call   8048450 <__do_global_dtors_aux>
 8048614:	59                   	pop    ecx
 8048615:	5b                   	pop    ebx
 8048616:	c9                   	leave  
 8048617:	c3                   	ret    


$ ldd vuln
	linux-gate.so.1 =>  (0xb7fff000)
	libc.so.6 => /lib/libc.so.6 (0xb7e5f000)
	/lib/ld-linux.so.2 (0x00110000)


$ nm /lib/libc.so.6 | grep system
0003af60 T __libc_system
0003aac0 t do_system
0010fca0 T svcerr_systemerr
0003af60 W system


$ nm /lib/libc.so.6 | grep exit
000a1c44 t __GI__exit
0002ddc0 t __GI_exit
0002e3b0 T __cxa_at_quick_exit
0002e0d0 T __cxa_atexit
0002e0d0 t __cxa_atexit_internal
000fa090 T __cyg_profile_func_exit
00125330 t __dyn_atexit
00192250 d __elf_set___libc_atexit_element__IO_cleanup__
001947a4 d __exit_funcs
000d1880 t __exit_thread
0002e070 t __internal_atexit
0002df40 t __new_exitfn
001976a0 b __new_exitfn_called
0002dee0 t __on_exit
000f2d00 t __pthread_exit
001947a8 d __quick_exit_funcs
0002dca0 t __run_exit_handlers
00192250 a __start___libc_atexit
00192254 a __stop___libc_atexit
000a1c44 T _exit
001958cc b added_atexit_handler.8073
00194604 D argp_err_exit_status
00125330 T atexit@GLIBC_2.0
0002ddc0 T exit
0019455c D obstack_exit_failure
0002dee0 W on_exit
000f2d00 T pthread_exit
0002e380 T quick_exit
00110ce0 T svc_exit


$ hexdump -C vuln | grep fflush
00000290  66 66 6c 75 73 68 00 73  74 72 63 70 79 00 70 75  |fflush.strcpy.pu|
00001e00  73 74 61 72 74 00 66 66  6c 75 73 68 40 40 47 4c  |start.fflush@@GL|


$ readelf -x .dynstr vuln
Hex dump of section '.dynstr':
  0x08048260 005f5f67 6d6f6e5f 73746172 745f5f00 .__gmon_start__.
  0x08048270 6c696263 2e736f2e 36005f49 4f5f7374 libc.so.6._IO_st
  0x08048280 64696e5f 75736564 00736574 75696400 din_used.setuid.
  0x08048290 66666c75 73680073 74726370 79007075 fflush.strcpy.pu
  0x080482a0 74730070 72696e74 66007374 646f7574 ts.printf.stdout
  0x080482b0 00676574 75696400 5f5f6c69 62635f73 .getuid.__libc_s
  0x080482c0 74617274 5f6d6169 6e00474c 4942435f tart_main.GLIBC_
  0x080482d0 322e3000                            2.0.

